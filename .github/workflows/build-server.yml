name: Build Docker Container & Push To Docker Hub

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  test-django:
    name: Test Django
    uses: niltonpimentel02/nilton_pimentel/.github/workflows/test-django.yml@main

  push-docker-image-to-docker-hub:
    name: Push Docker Image To Docker Hub
    runs-on: ubuntu-24.04
    needs: test-django
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log In To Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push To Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            niltonpimentel/niltonpimentel:latest

  create-env-file:
    name: Create Env File
    runs-on: ubuntu-24.04
    needs: test-django
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_PRIVATE_KEY }}
          script: |
            cd /opt/projects/nilton_pimentel
            rm .env
            cat << EOF >> .env
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DEBUG=${{ secrets.DEBUG }}
            ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}

            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}

            CLOUDFLARE_R2_BUCKET=${{ secrets.CLOUDFLARE_R2_BUCKET}}
            CLOUDFLARE_R2_ACCESS_KEY=${{ secrets.CLOUDFLARE_R2_ACCESS_KEY}}
            CLOUDFLARE_R2_SECRET_KEY=${{ secrets.CLOUDFLARE_R2_SECRET_KEY}}
            CLOUDFLARE_R2_BUCKET_ENDPOINT=${{ secrets.CLOUDFLARE_R2_BUCKET_ENDPOINT}}

            EMAIL_BACKEND=${{ secrets.EMAIL_BACKEND }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            EOF

  copy-config-files:
    name: Copy Config Files
    runs-on: ubuntu-24.04
    needs: test-django
    steps:
    - uses: actions/checkout@v4
    - name: Checkout
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_PRIVATE_KEY }}
        source: 'config/*'
        target: '/opt/projects/nilton_pimentel'

  restart-docker-containers:
    name: Restart Docker Containers
    runs-on: ubuntu-24.04
    needs: [push-docker-image-to-docker-hub, create-env-file]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_PRIVATE_KEY }}
          script: |
            cd /opt/projects/nilton_pimentel
            docker pull niltonpimentel/niltonpimentel:latest
            cp config/docker-compose.yml docker-compose.yml
            docker compose up -d --force-recreate nginx app

  apply-django-migrations:
    name: Apply Django Migrations
    runs-on: ubuntu-24.04
    needs: restart-docker-containers
    if: github.event_name == 'push' && (contains(github.event.commits.*.added, '**/migrations/**') || contains(github.event.commits.*.modified, '**/migrations/**')) && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_PRIVATE_KEY }}
          script: |
            cd /opt/projects/nilton_pimentel
            docker exec --tty app python manage.py migrate --noinput

  run-django-collectstatic:
    name: Run Django Collect Static
    runs-on: ubuntu-24.04
    needs: restart-docker-containers
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_PRIVATE_KEY }}
          script: |
            cd /opt/projects/nilton_pimentel
            docker exec --tty app python manage.py collectstatic --no-input
