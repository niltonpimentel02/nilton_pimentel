# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
#  test:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.9
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.9
#    - name: Copying configurations
#      run: |
#        cp contrib/env-sample .env
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements-dev.txt
#    - name: Test with pytest
#      run: |
#        pytest

  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
#    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: niltonpimentel/niltonpimentel:latest

  deploy-server:
    name: Build Server Main
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: checkout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_MAIN_IP }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.HOST_MAIN_PRIVATE_KEY }}
          port: ${{ secrets.HOST_PORT }}
          shell: 'script -q -e -c "bash {0}"'
          script: |
            cd /opt
            git pull
            docker pull niltonpimentel/niltonpimentel:latest
            docker compose up -d --force-recreate web certbot_ssl nginx
            docker rmi $(docker images -f "dangling=true" -q)
            truncate -s 0 /var/lib/docker/containers/*/*-json.log
